package main_test

import (
	"testing"
	"github.com/op/go-logging"
	"encoding/json"
	"bytes"
	"net/http"
	"io/ioutil"
	types2 "myproj/try/wasabi-simulatepost-baas1/types"
)

var logger *logging.Logger

func init() {
	logger = logging.MustGetLogger("simulatepost")
}

//------内网setup-----
func Test_init(t *testing.T) {
	Test_Login(t)
	Test_Setup(t)
}

var lresp = types2.LoginResp{}

func Test_Login(t *testing.T) {
	l := types2.LoginReq{
		Username: "admin",
		Password: "yunphant",
	}
	lb, _ := json.Marshal(l)
	resp, err := http.Post("http://192.168.9.87:8081/login", "application/json", bytes.NewBuffer(lb))

	if err != nil {
		logger.Info(err)
		panic(err)
	}
	defer resp.Body.Close()
	body, _ := ioutil.ReadAll(resp.Body)

	err = json.Unmarshal(body, &lresp)
	if err != nil {
		logger.Info(err)
		panic(err)
	}
	logger.Info("token: ", lresp.Data.Token)
}

//带authorization的post请求
func Test_Setup(t *testing.T) {

	l := types2.SetupReq{
		Consensus: "etcdraft",
		PeerPorts: []types2.Peerport{
			types2.Peerport{
				Main:      30031,
				Chaincode: 30032,
			},
		},
		OrdererPorts: []types2.Ordererport{
			types2.Ordererport{
				Main: 30020,
			},
			types2.Ordererport{
				Main: 30021,
			},
			types2.Ordererport{
				Main: 30022,
			},
		},
		AutoGeneratedCerts: true,
	}

	lb, err := json.Marshal(l)

	if err != nil {
		logger.Info(err)
		panic(err)
	}

	req, _ := http.NewRequest("POST", "http://192.168.9.87:8081/member/setup", bytes.NewBuffer(lb))

	req.Header.Add("authorization", lresp.Data.Token)

	resp, err := http.DefaultClient.Do(req)

	if err != nil {
		logger.Info(err)
		panic(err)
	}
	defer resp.Body.Close()
	body, _ := ioutil.ReadAll(resp.Body)

	logger.Info("res: ", string(body))
}
